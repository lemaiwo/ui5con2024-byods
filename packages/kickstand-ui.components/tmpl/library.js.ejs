/*!
 * ${copyright}
 */
sap.ui.define([
	"sap/ui/dom/includeStylesheet",
	"sap/ui/core/library",
	"<%= npmPackage %>/dist/kickstand-ui/kickstand-ui"
], function (includeStylesheet) {
	"use strict";

	// stylesheet with CSS properties/variables
	includeStylesheet(sap.ui.require.toUrl("<%= npmPackage %>/dist/kickstand-ui/kickstand-ui.css"));

	// delegate further initialization of this library to the Core
	// Hint: sap.ui.getCore() must still be used to support preload with sync bootstrap!
	sap.ui.getCore().initLibrary({
		name: "<%= namespace %>",
		version: "${version}",
		dependencies: [ // keep in sync with the ui5.yaml and .library files
			"sap.ui.core"
		],
		types: [
			//"<%= namespace %>.ExampleColor"
		],
		interfaces: [],
		controls: [<% clazzes.forEach(clazz => { %>
			"<%= namespace %>.<%= clazz.shortName %>",<% }) %>
		],
		elements: [],
		noLibraryCSS: true
	});

	/**
	 * Some description about <code><%= namespace %></code>
	 *
	 * @namespace
	 * @name <%= namespace %>
	 * @author Generated by Peter Muessig
	 * @version ${version}
	 * @public
	 */
	var thisLib = window<%- namespace.split(".").map(ns => `["${ns}"]`).join("") %>;

	/**
	 * Semantic Colors of the <code><%= namespace %>.Example</code>.
	 *
	 * @enum {string}
	 * @public
	 */
	//thisLib.ExampleColor = {
	//
	//	/**
	//	 * Default color (brand color)
	//	 * @public
	//	 */
	//	Default : "Default",
	//
	//	/**
	//	 * Highlight color
	//	 * @public
	//	 */
	//	Highlight : "Highlight"
	//
	//};

	return thisLib;

});
